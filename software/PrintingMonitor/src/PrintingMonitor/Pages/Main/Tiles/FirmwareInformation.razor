@using PrintingMonitor.Printer
@using PrintingMonitor.Printer.Models.Commands.Informations
@using PrintingMonitor.Printer.Notification

@implements IDisposable

@inject IPrinter Printer
@inject INotificator<Printer.Models.Information.FirmwareInformation> Notificator

<Tile Title="Firmware Information" SizeClasses="col-xl-3 col-md-6  mb-4">
    <div class="row d-flex justify-content-center">
        <h5>Filament Diameter(M200):</h5>
    </div>
    <div class="row d-flex justify-content-center mb-2">
        <h6>Diameter: @(firmwareInformation?.FilamentDiameter?.ToString() ?? "-")</h6>
    </div>

    <div class="row d-flex justify-content-center">
        <h5>Home offset(m206):</h5>
    </div>
    <div class="row d-flex justify-content-center mb-2">
        <h6>X:@(firmwareInformation?.HomeOffset?.X.ToString() ?? "-") Y:@(firmwareInformation?.HomeOffset?.Y.ToString() ?? "-") Z:@(firmwareInformation?.HomeOffset?.Z.ToString() ?? "-")</h6>
    </div>

    <div class="row d-flex justify-content-center">
        <h5>Steps per unit(M92):</h5>
    </div>
    <div class="row d-flex justify-content-center mb-2">
        <h6>X:@(firmwareInformation?.StepsPerUnit?.X.ToString() ?? "-") Y:@(firmwareInformation?.StepsPerUnit?.Y.ToString() ?? "-") Z:@(firmwareInformation?.StepsPerUnit?.Z.ToString() ?? "-") E:@(firmwareInformation?.StepsPerUnit?.E.ToString() ?? "-")</h6>
    </div>

    <div class="row d-flex justify-content-center">
        <h5>PID Settings(M301):</h5>
    </div>
    <div class="row d-flex justify-content-center mb-2">
        <h6>P:@(firmwareInformation?.PID?.P.ToString() ?? "-") I:@(firmwareInformation?.PID?.I.ToString() ?? "-") D:@(firmwareInformation?.PID?.D.ToString() ?? "-")</h6>
    </div>
</Tile>

@code
{
    private Printer.Models.Information.FirmwareInformation firmwareInformation;

    protected override async Task OnInitializedAsync()
    {
        Notificator.Subscribed(this, FirmwareInformationUpdate);

        await Printer.ExecuteInformationCommand(new GetCurrentFirmwareInformation());

        base.OnInitialized();
    }

    private async Task FirmwareInformationUpdate(Printer.Models.Information.FirmwareInformation data)
    {
        firmwareInformation = data;

        await InvokeAsync(this.StateHasChanged);
    }

    public void Dispose()
    {
        Notificator.Unsubscribed(this);
    }
}
