@using System.Threading
@using PrintingMonitor.Printer.Queries;

@inject ITemperaturesQuery TemperaturesQuery

<DoubleSideTile Title="Temperature"
                AlignContentCenter
                SizeClasses="col-xl-5 col-md-6 mb-4"
                LeftSideSizeClasses="col-xl-4 col-lg-4 col-12"
                RightSideSizeClasses="col-xl-8 col-lg-8 col-12">
    <LeftSideContent>
        <div class="row d-flex justify-content-center">
            <h6>Bed Temperature:</h6>
        </div>
        <div class="row d-flex justify-content-center mb-4">
            <h6>Current: @(temperatures?.BedCurrent?.ToString() ?? "-"); Target: @(temperatures?.BedTarget?.ToString() ?? "-")</h6>
        </div>
        <div class="row d-flex justify-content-center">
            <h6>Hotend Temperature:</h6>
        </div>
        <div class="row d-flex justify-content-center">
            <h6>Current: @(temperatures?.HotendCurrent?.ToString() ?? "-"); Target: @(temperatures?.HotendTarget?.ToString() ?? "-")</h6>
        </div>
    </LeftSideContent>
    <RightSideContent>
        <div class="row d-flex justify-content-center">
            <h6>Set Bed Temperature:</h6>
        </div>
        <div class="row  mb-4">
            <div class="col-xl-5">
                <input class="form-control" type="number" value="42">
            </div>
            <div class="col-xl-3 mb-1">
                <button type="button" class="btn btn-secondary oi oi-check w-100"> Set</button>
            </div>
            <div class="col-xl-4">
                <button type="button" class="btn btn-secondary oi oi-x w-100"> Turn off</button>
            </div>
        </div>
        <div class="row d-flex justify-content-center">
            <h6>Set Hotend Temperature:</h6>
        </div>
        <div class="row  mb-4">
            <div class="col-xl-5">
                <input class="form-control" type="number" value="42">
            </div>
            <div class="col-xl-3 mb-1">
                <button type="button" class="btn btn-secondary oi oi-check w-100"> Set</button>
            </div>
            <div class="col-xl-4">
                <button type="button" class="btn btn-secondary oi oi-x w-100"> Turn off</button>
            </div>
        </div>
        <div class="row d-flex justify-content-center">
            <h6>Set Fan Speed:</h6>
        </div>
        <div class="row">
            <div class="col-xl-5">
                <input class="form-control" type="number" value="42">
            </div>
            <div class="col-xl-3 mb-1">
                <button type="button" class="btn btn-secondary oi oi-check w-100"> Set</button>
            </div>
            <div class="col-xl-4">
                <button type="button" class="btn btn-secondary oi oi-x w-100"> Turn off</button>
            </div>
        </div>
    </RightSideContent>
</DoubleSideTile>

@code 
{
    private Printer.Models.Temperatures temperatures;
    private Timer timer;

    protected override void OnInitialized()
    {
        timer = new Timer(
            new TimerCallback(async _ =>
            {
                temperatures = await TemperaturesQuery.Get();

                await InvokeAsync(this.StateHasChanged);
            }), 
            null, 
            1000, 
            5000);

        base.OnInitialized();
    }

    public void Dispose()
    {
        timer?.Dispose();
    }
}